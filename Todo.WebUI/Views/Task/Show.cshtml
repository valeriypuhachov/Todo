@model Todo.Domain.Entities.UserTask

@{
    ViewBag.Title = "Show";
}

<div class="container">
    <div class="panel">
        <div class="panel-heading">
            <h2>@Model.TaskName</h2>
        </div>
        <div class="panel-body row">
            @Html.HiddenFor(m => m.TaskId)
            @Html.HiddenFor(m => m.Latitude)
            @Html.HiddenFor(m => m.Longitude)
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.TaskDescription, new { @class = "col-md-2 control-label" })
                    <div class="col-md-9 col-md-offset-1">
                        @Html.DisplayFor(m => m.TaskDescription, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.Time, new { @class = "col-md-2 control-label" })
                    <div class="col-md-9 col-md-offset-1" id="time">
                        @Html.DisplayFor(m => m.Time, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    <label class="col-md-2 control-label">Оставшееся время</label>
                    <div id="left-time" class="col-md-9 col-md-offset-1">

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(m => m.TaskState, new { @class = "control-label col-md-2" })
                    <div class="col-md-9 col-md-offset-1">
                        @Html.DisplayFor(m => m.TaskState, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <div class="text-center"><label>@Resources.Resource.TaskLocation</label></div>
            <div id="map" class="col-md-12"></div>
        </div>
    </div>
</div>

@section scripts{

    <script type="text/javascript">
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -33.8688, lng: 151.2195 },
                zoom: 13
            });

            var longitude = document.getElementById('Longitude');
            var latitude = document.getElementById('Latitude');

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    map.setCenter(pos);
                })

            }

            var pos = {
                lat: Number(latitude.getAttribute('Latitude')),
                lng: Number(longitude.getAttribute('Longitude'))
            }

            map.setCenter(pos);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                map: map,
                anchorPoint: new google.maps.Point(0, -29)
            });
        }

        $(document).ready(timer);

        function timer() {
            var element = document.getElementById('left-time');

            var currentDate = new Date();

            var parsedDate = Date.parse(String(document.getElementById('time').textContent).trim().replace(' ', 'T').replace(/\./g, '-'));
            var taskDate = new Date(parsedDate);
            debugger

            var leftTime = new Date(String(taskDate.getMilliseconds() - currentDate.getMilliseconds()));

            var hours = leftTime.getHours();
            var minutes = leftTime.getMinutes();
            var seconds = leftTime.getSeconds();

            if (hours < 10) hours = "0" + hours;
            if (minutes < 10) minutes = "0" + minutes;
            if (seconds < 10) seconds = "0" + seconds;

            element.innerHTML = hours + ":" + minutes + ":" + seconds;
            setTimeout('timer()', 1000);
        }
    </script>
}